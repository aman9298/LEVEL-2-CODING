https://leetcode.com/problems/permutation-in-string/description/

https://www.youtube.com/watch?v=24r8fvX8pek&ab_channel=Codebix
time = O(m + n) , space = O(1)
class Solution {
    public boolean checkInclusion(String s1, String s2) {
        
        int len1 = s1.length() , len2 = s2.length();
        int[] arr = new int[26];
       // insert string s1 value into array 
        for(int i = 0 ;i<len1 ;i++)
        {
          arr[s1.charAt(i) - 'a']++ ; 
        }
        for(int i = 0; i<len2 ; i++)
        {
            arr[s2.charAt(i) - 'a']-- ;
            if(i -len1 >=0)
            {
                arr[s2.charAt(i - len1)- 'a']++ ;
            }
            if(allzero(arr)) return true ;
        }
        return false;
    }

    private boolean allzero( int[] arr)
    {
        for(int i = 0; i< 26 ;i++)
        {
            if(arr[i] != 0)return false;
        }
        return true;
    }
}

https://leetcode.com/problems/binary-tree-cameras/submissions/850286232/
tc and sc = O(N) ,  becoz recurse take extra space of stack 
        0 = camera
         1 = covered
         3 = uncovered
class Solution {
    int count = 0;
    public int minCameraCover(TreeNode root) {
        
        int res = helper(root);
        if(res == -1)
        {
            count++;
        }
        return count;
 
    }
    public int helper(TreeNode root)
    {
        if(root == null) return 1;
        int lht = helper(root.left);
        int rht  =  helper(root.right);
       
        if(lht == -1 || rht == -1)
        {
            count++ ;
            return 0;
        }
        if(lht == 0 || rht == 0)
        {
            return 1;
        }
        return -1;

    }
}

 
 
 simple traversal --------
 class Solution{
    List<Integer> ans = new ArrayList<>();

    public List<Integer> preorderTraversal(TreeNode root)
    {
        if(root == null) return  ans;
        ans.add(root.val);
        preorderTraversal(root.left);
        preorderTraversal(root.right);

        return ans;
    }
}

Morris Traversal----------

class Solution {
    List<Integer> ans = new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
        while(root != null)
        {
            if(root.left == null)
            {
                ans.add( root.val);
                root = root.right;
            }
            else
            {
                TreeNode p1 = root.left ;
                while(p1.right!= null && p1.right != root)
                {
                    p1 = p1.right;
                }
                if(p1.right == null)
                {
                    ans.add(root.val);
                    p1.right = root;
                    root = root.left ;
                }
                else{
                    root = root.right ; 
                }
            }
        }
        return ans;
    }
}

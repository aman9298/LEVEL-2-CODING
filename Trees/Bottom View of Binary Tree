https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

Same as Top view-------

class Solution
{
    static class Pair
   {
       int level;
       Node node;
       public Pair (  Node node,int level)
       {
           this.level = level ;
           this.node = node;
       }
        
    }
    public ArrayList <Integer> bottomView(Node root)
    {
      HashMap<Integer,Integer> map = new HashMap<>();
        Queue<Pair> q = new ArrayDeque<>();
        q.add(new Pair(root ,0));
        int min  =0 , max= 0;
        while(!q.isEmpty())
        {
            Pair rem = q.remove();
            if(!map.containsKey(rem.level))
            {
                map.put(rem.level , rem.node.data);
            }
            else              // only else part is need to add in this code
            {
                map.put(rem.level , rem.node.data);
            }
            min = Math.min(min , rem.level);
            max = Math.max(max , rem.level);
            
            if(rem.node.left!=null) q.add(new Pair(rem.node.left , rem.level-1));
            if(rem.node.right!=null) q.add(new Pair(rem.node.right , rem.level+1));
            
        }
        ArrayList<Integer> res = new ArrayList<>();
        while(min <= max)
        {
            res.add(map.get(min));
            min++ ;
        }
        
            return res;
    }
}
